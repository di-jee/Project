import telebot
from config import token
from markup import main_markup, catalog_level_one_markup, catalog_level_two_markup, catalog_level_three_markup
from utils import search_or_save_user, change_money, products_availability
from utils import check_level_items, check_level_four_items, quantity_product_level_three
from utils import level_in_shelve, get_level_one_in_shelve, del_level_one_in_shelve, func_level_sale
from utils import insert_database_products_level_four
from cripto_info import criptoInfo

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
def start(message):
    markup = main_markup()
    try:
        search_or_save_user(message.from_user.id, message.from_user.username)
    except:
        search_or_save_user(message.from_user.id)   
    bot.send_message(message.chat.id, 'Hello my frend', reply_markup=markup)

@bot.message_handler(func=lambda message: True, content_types=['text'])
def mail_fucn_store(message):
    chat_id = message.chat.id
    
    if message.text == 'üìú –ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞':
        bot.send_message(
            chat_id, 
            products_availability());
    elif message.text == 'üë®‚Äçüíº –ü—Ä–æ—Ñ–∏–ª—å':
        try:
            data_user = search_or_save_user(message.from_user.id, message.from_user.username)
        except:
            data_user = search_or_save_user(message.from_user.id)

        string_id = '–í–∞—à id:\t' + str(data_user[0][1]) + '\n'
        string_name = '–í–∞—à–µ –∏–º—è:\t' + str(data_user[0][2]) + '\n'
        string_money = '–£ –≤–∞—Å –Ω–∞ —Å—á–µ—Ç—É:\t' + str(data_user[0][3]) + ' —Ä—É–±' + '\n'
        string_total = '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—É–ø–æ–∫:\t' + str(data_user[0][4]) + '\n'
        string_data = string_id + string_name + string_money + string_total
        bot.send_message(chat_id, string_data)
    elif message.text == 'üóÇ –ö–∞—Ç–∞–ª–æ–≥':
        markup_catalog = catalog_level_one_markup()
        bot.send_message(message.chat.id, message.text, reply_markup=markup_catalog)
        bot.register_next_step_handler(message, catalog_level_two)
    elif message.text == 'üí∞ –ë–∞–ª–∞–Ω—Å':
        markup_balance = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        balance = telebot.types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å')
        main_menu = telebot.types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup_balance.row(balance, main_menu)
        user_data = search_or_save_user(message.from_user.id, message.from_user.username)
        text_message = '–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(user_data[0][3]) + ' —Ä—É–±'
        bot.send_message(message.chat.id, text_message, reply_markup=markup_balance)
        bot.register_next_step_handler(message, choice_from_balance)
    elif message.text == 'üÜò –ü–æ–º–æ—â—å':
        text_message = '–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ—Ç —Å—É—é–¥–∞ -> @help_sos123'
        bot.send_message(message.chat.id, text_message)
    else:
        markup = main_markup()
        bot.send_message(chat_id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π')
        bot.send_message(chat_id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)

# /C/
def catalog_level_two(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup_main = main_markup()
        bot.send_message(message.chat.id, message.text, reply_markup=markup_main)
    else:
        check = check_level_items(message.text, 1)
        if check:
            level_in_shelve(message.from_user.id, message.text)
            markup_level_two = catalog_level_two_markup(message.text)
            bot.send_message(message.chat.id, message.text, reply_markup=markup_level_two)
            bot.register_next_step_handler(message, catalog_level_three)
        elif check == None:
            markup_main = main_markup()
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=markup_main)
        elif not check:
            markup_main = main_markup()
            bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—É—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π', reply_markup=markup_main)

def catalog_level_three(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        del_level_one_in_shelve(message.from_user.id)
        markup_main = main_markup()
        bot.send_message(message.chat.id, message.text, reply_markup=markup_main)
    elif message.text == '–ù–∞–∑–∞–¥':
        del_level_one_in_shelve(message.from_user.id)
        markup_catalog = catalog_level_one_markup()
        bot.send_message(message.chat.id, message.text, reply_markup=markup_catalog)
        bot.register_next_step_handler(message, catalog_level_two)
    else:
        id_user = message.from_user.id
        check = check_level_items(message.text, 2, id_user)
        if check:
            markup_three = catalog_level_three_markup(message.text, id_user)

            choice_user_level_two = get_level_one_in_shelve(id_user)
            choice_user_level_three = choice_user_level_two + '|' + message.text
            level_in_shelve(id_user, choice_user_level_three)

            bot.send_message(message.chat.id, message.text, reply_markup=markup_three)
            bot.register_next_step_handler(message, catalog_level_four)

        elif check == None:
            del_level_one_in_shelve(message.from_user.id)
            markup_main = main_markup()
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=markup_main)
        elif not check:
            bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—É—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π')
            bot.register_next_step_handler(message, catalog_level_three)

def catalog_level_four(message):
    id_user = message.from_user.id
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        del_level_one_in_shelve(message.from_user.id)
        markup_main = main_markup()
        bot.send_message(message.chat.id, message.text, reply_markup=markup_main)
    elif message.text == '–ù–∞–∑–∞–¥':
        choice_one_level = get_level_one_in_shelve(message.from_user.id).split('|')
        markup_level_two = catalog_level_two_markup(choice_one_level[0])
        level_in_shelve(id_user, choice_one_level[0])
        bot.send_message(message.chat.id, message.text, reply_markup=markup_level_two)
        bot.register_next_step_handler(message, catalog_level_three)
    else:
        check = check_level_four_items(message.text, id_user)
        if check:
            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            menu = telebot.types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
            markup.row(menu)
            —Åhoice_user = (message.text).split('|')
            choice_back_level = get_level_one_in_shelve(message.from_user.id)
            choice_back_level += '|' + —Åhoice_user[0] + '|'
            level_in_shelve(id_user, choice_back_level)

            bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ —à—Ç—É–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?', reply_markup=markup)
            bot.register_next_step_handler(message, level_of_sale)

        elif check == None:
            del_level_one_in_shelve(message.from_user.id)
            markup_main = main_markup()
            bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=markup_main)
        elif not check:
            bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—É—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π')
            bot.register_next_step_handler(message, catalog_level_four)
            

def level_of_sale(message):
    markup_main = main_markup()
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        del_level_one_in_shelve(message.from_user.id)
        bot.send_message(message.chat.id, message.text, reply_markup=markup_main)
    else:
        try:
            check_choice_user_for_number = int(message.text)
            choice_user_quantity_product = quantity_product_level_three(message.from_user.id)

            if check_choice_user_for_number <= choice_user_quantity_product and check_choice_user_for_number > 0:

                product_user = func_level_sale(message.from_user.id, check_choice_user_for_number)

                if product_user == 'money_true':
                    confirmation = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                    menu = telebot.types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                    conf = telebot.types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é')
                    confirmation.row(conf)
                    confirmation.row(menu)
                    bot.send_message(message.chat.id, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à—É –ø–æ–∫—É–ø–∫—É', reply_markup=confirmation)
                    bot.register_next_step_handler(message, confirmation_user)

                elif product_user == 'not_money':
                    bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É', reply_markup=markup_main)
                    del_level_one_in_shelve(message.from_user.id)
                elif product_user == None:
                    insert_database_products_level_four(
                        get_level_one_in_shelve(message.from_user.id),
                    );
                    bot.send_message(message.chat.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑', reply_markup=markup_main)
                    del_level_one_in_shelve(message.from_user.id)
            else:
                del_level_one_in_shelve(message.from_user.id)
                bot.send_message(message.chat.id, '–£ –Ω–∞—Å –Ω–µ—Ç—É —Ç–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞', reply_markup=markup_main)
        except ValueError:
            bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å. –í–≤–µ–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π')
            bot.register_next_step_handler(message, level_of_sale)

def confirmation_user(message):
    markup_main = main_markup()
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        insert_database_products_level_four(
            get_level_one_in_shelve(message.from_user.id),
        );
        del_level_one_in_shelve(message.from_user.id)
        bot.send_message(message.chat.id, message.text, reply_markup=markup_main)
    elif message.text == '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é':
        choice_one_level = get_level_one_in_shelve(message.from_user.id).split('|')
        products_user = choice_one_level[3].split(',')
        str_products = ''
        for product in products_user:
            str_products += product + '\n'
        bot.send_message(message.chat.id, str_products)
        bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!', reply_markup=markup_main)

    else:
        bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π')
        bot.register_next_step_handler(message, confirmation_user)
# /C/

# /B/
def choice_from_balance(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup_main = main_markup()
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup_main)
    elif message.text == '–ü–æ–ø–æ–ª–Ω–∏—Ç—å':
        payment = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        qiwi_button = telebot.types.KeyboardButton('ü•ù QIWI')
        replenishment = telebot.types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ')
        crip_info = telebot.types.KeyboardButton('CRIPTO INFO')
        menu = telebot.types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        back = telebot.types.KeyboardButton('–ù–∞–∑–∞–¥')
        payment.row(qiwi_button)
        payment.row(replenishment)
        payment.row(menu, back, crip_info)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã', reply_markup=payment)
        bot.register_next_step_handler(message, choice_of_payment_method)
    else:
        markup_main = main_markup()
        bot.send_message(message.chat.id, '–í–æ—Å–ø–æ–ª—å–∑—É–µ—É—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π', reply_markup=markup_main)

def choice_of_payment_method(message):
    markup_main = main_markup()
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        text_message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        bot.send_message(message.chat.id, text_message, reply_markup=markup_main)

    elif message.text == '–ù–∞–∑–∞–¥':
        markup_balance = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        balance = telebot.types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å')
        main_menu = telebot.types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup_balance.row(balance, main_menu)

        user_data = search_or_save_user(message.from_user.id, message.from_user.username)
        text_message = '–í–∞—à –±–∞–ª–∞–Ω—Å: ' + str(user_data[0][3]) + ' —Ä—É–±'

        bot.send_message(message.chat.id, text_message, reply_markup=markup_balance)
        bot.register_next_step_handler(message, choice_from_balance)

    elif message.text == '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ':
        text_message = '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å'

        bot.send_message(message.chat.id, text_message)
        bot.register_next_step_handler(message, refill)

    elif message.text == 'ü•ù QIWI':
        text_message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        bot.send_message(message.chat.id, text_message, reply_markup=markup_main)
    elif message.text == '** BTC **':
        text_message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
        bot.send_message(message.chat.id, text_message, reply_markup=markup_main)
    elif message.text == 'CRIPTO INFO':
        arrCriptoInfo = criptoInfo()
        text_message = ''

        for infoC in arrCriptoInfo:
            text_message += infoC[3] + ' - ' +  infoC[4] + ' $ ' + '\n'

        bot.send_message(message.chat.id, text_message, reply_markup=markup_main)
    else:
        text_message = '–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π'

        bot.send_message(message.chat.id, text_message)
        bot.register_next_step_handler(message, choice_of_payment_method)

def refill(message):
    try:
        message_int = int(message.text)
        if message_int > 0:
            change_money(message.from_user.id, message_int)
            markup_main = main_markup()
            bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞', reply_markup=markup_main)
        else:
            bot.send_message(message.chat.id, '–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –æ—à–∏–±–ª–∏—Å—å, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ')
            bot.register_next_step_handler(message, refill)
    except ValueError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ')
        bot.register_next_step_handler(message, refill)


def refillQIWI(message):
    text_message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    markup_main = main_markup()
    bot.send_message(message.chat.id, text_message, reply_markup=markup_main)



def refillBTC(message):
    text_message = '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    markup_main = main_markup()
    bot.send_message(message.chat.id, text_message, reply_markup=markup_main)
# /B/


if __name__ == '__main__':
    bot.polling() 
